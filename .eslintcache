[{"D:\\Web_dev\\e-commerce\\frontend\\src\\index.js":"1","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Card.jsx":"2","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\NavBar.jsx":"3","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\CreateProduct.jsx":"4","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Home.jsx":"5","D:\\Web_dev\\e-commerce\\frontend\\src\\App.jsx":"6","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Bootstrap.jsx":"7","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\DeleteProduct.jsx":"8","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Register.jsx":"9","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Login.jsx":"10","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Logout.jsx":"11","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Cart.jsx":"12","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Checkout.jsx":"13","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Profile.jsx":"14"},{"size":526,"mtime":1606901350925,"results":"15","hashOfConfig":"16"},{"size":1776,"mtime":1609064179698,"results":"17","hashOfConfig":"16"},{"size":2477,"mtime":1609088321252,"results":"18","hashOfConfig":"16"},{"size":2307,"mtime":1607504083086,"results":"19","hashOfConfig":"16"},{"size":2418,"mtime":1609064260779,"results":"20","hashOfConfig":"16"},{"size":2815,"mtime":1609062197833,"results":"21","hashOfConfig":"16"},{"size":359,"mtime":1609087371865,"results":"22","hashOfConfig":"16"},{"size":1062,"mtime":1608868501827,"results":"23","hashOfConfig":"16"},{"size":3308,"mtime":1609136866384,"results":"24","hashOfConfig":"16"},{"size":3458,"mtime":1609061498578,"results":"25","hashOfConfig":"16"},{"size":949,"mtime":1608868805844,"results":"26","hashOfConfig":"16"},{"size":7353,"mtime":1608977056181,"results":"27","hashOfConfig":"16"},{"size":11002,"mtime":1608977220791,"results":"28","hashOfConfig":"16"},{"size":2410,"mtime":1608973189952,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"dp21rv",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"D:\\Web_dev\\e-commerce\\frontend\\src\\index.js",[],["66","67"],"D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Card.jsx",["68","69","70"],"import React, { useState } from 'react'\r\n\r\n\r\nconst Card = (props) => {\r\n\r\n    let auth = sessionStorage.getItem('token')\r\n\r\n    const setOrderItem = () => {\r\n        if (auth !== null) {\r\n            fetch('http://127.0.0.1:8000/api/set-order-item', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n                }\r\n                , body: JSON.stringify(\r\n                    {\r\n                        quantity: 1,\r\n                        user: sessionStorage.getItem('id'),\r\n                        item: props.id\r\n                    }\r\n                )\r\n            }).then(\r\n                (response) => {\r\n                    return response.json()\r\n                }\r\n            ).then(\r\n                (data) => {\r\n                    props.setShowPopup(true)\r\n                }\r\n            )\r\n        } else {\r\n            props.setLoginPopUp(true)\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        <div className=\"card-deck container-fluid m-auto bg-light\">\r\n            <div className=\"card shadow-lg  bg-white rounded bg-light mt-4 mb-2 \" >\r\n                <img src={props.image} className=\"card-img-top\" alt=\"...\" />\r\n                <div className=\"card-body border-top \">\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h5>{props.price}</h5>\r\n                        <h5>{props.title}</h5>\r\n                    </div>\r\n                    <hr />\r\n                    <a onClick={setOrderItem} className=\"btn btn-info \">Add to Cart</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Card;\r\n","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\NavBar.jsx",["71"],"import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    let history = useHistory()\r\n    let logged = sessionStorage.getItem('logged')\r\n\r\n    let UserShow = () => {\r\n        return (<>\r\n            <li className='mt-1'><a className='text-primary my-2 my-sm-0 mr-3my-2 my-sm-0 mr-3' > <Link to='/profile' >{sessionStorage.getItem('username')}</Link></a></li>\r\n            <li className='mt-1'><Link to='/logout' className='my-2 my-sm-0 mr-3my-2 my-sm-0 mr-3' >Logout</Link></li>\r\n        </>\r\n        )\r\n    }\r\n\r\n    let Authentication = () => {\r\n        return (\r\n            <>\r\n                <li className='mt-1'><Link to='/login' className='my-2 my-sm-0 mr-3my-2 my-sm-0 mr-3' >Login</Link></li>\r\n                <li className='mt-1' ><Link to='/register' className='my-2 my-sm-0 mr-3my-2 my-sm-0 mr-3' >Register</Link></li>\r\n            </>\r\n        )\r\n    }\r\n\r\n    let handleCart = () => {\r\n        history.push('/cart')\r\n    }\r\n\r\n    return (\r\n        <nav class=\"navbar  navbar-expand-sm navbar-light \" style={{ backgroundColor: '#e3f2fd' }}>\r\n            <a class=\"navbar-brand\" href=\"/\">E-Commerce</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\r\n                <ul class=\"nav navbar-nav\" >\r\n                    {\r\n                        logged === 'true' ? <UserShow /> : <Authentication />\r\n                    }\r\n                    <li >\r\n                        <svg onClick={handleCart} width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-cart2 \" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l1.25 5h8.22l1.25-5H3.14zM5 13a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                        </svg>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\CreateProduct.jsx",["72"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst CreateProduct = () => {\r\n\r\n    let [title, setTitle] = useState('')\r\n    let [image, setImage] = useState('')\r\n    let [price, setPrice] = useState('')\r\n    let createRedirect = useHistory()\r\n\r\n\r\n    let postData = () => {\r\n        fetch('http://127.0.0.1:8000/api/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n            , body: JSON.stringify(\r\n                {\r\n                    title: title,\r\n                    image: image,\r\n                    price: price\r\n                }\r\n            )\r\n        }).then(\r\n            response => response.json()\r\n        ).then(\r\n            (data) => {\r\n                console.log(data)\r\n                createRedirect.push('/')\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div className='container' >\r\n            <div className=\"form-group mt-2\">\r\n                <label for=\"exampleInputEmail1\">Product Name</label>\r\n                <input type=\"text\" className=\"form-control w-5\" onChange={(e) => setTitle(e.target.value)} />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">The name of the product you want to create.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Image link</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={(e) => setImage(e.target.value)} />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Since,it is a side project I am not using cloud services. So, instead I an using image links</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Price</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={(e) => setPrice(e.target.value)} />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Set the price of the product</small>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={postData} >Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateProduct;","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Home.jsx",[],"D:\\Web_dev\\e-commerce\\frontend\\src\\App.jsx",[],"D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Bootstrap.jsx",[],"D:\\Web_dev\\e-commerce\\frontend\\src\\components\\DeleteProduct.jsx",[],"D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Register.jsx",[],"D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Login.jsx",["73"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport Navbar from './NavBar.jsx'\r\n\r\nconst Login = (props) => {\r\n\r\n    let [pass1, getPass1] = useState('')\r\n    let [username, getUsername] = useState('')\r\n    let history = useHistory()\r\n    let [loginFail, setLoginFail] = useState(false)\r\n\r\n    const getUserInfo = () => {\r\n        fetch('http://127.0.0.1:8000/api/get-user-id/' + sessionStorage.getItem('username'), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                sessionStorage.setItem('id', data.id)\r\n                console.log(data)\r\n            })\r\n    }\r\n\r\n    let LoginFailed = () => {\r\n        setTimeout(\r\n            () => setLoginFail(false), 5000\r\n        )\r\n        if (loginFail === true) {\r\n            return (\r\n                <div class=\"alert alert-danger mt-2\" role=\"alert\">\r\n                    Your username or password is incorrect\r\n                </div>)\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n    let handleSubmit = () => {\r\n        fetch('http://127.0.0.1:8000/api/token-auth', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            , body: JSON.stringify(\r\n                {\r\n                    username: username,\r\n                    password: pass1\r\n                }\r\n            )\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                if (data.detail !== 'No active account found with the given credentials') {\r\n                    sessionStorage.setItem('token', data.access)\r\n                    sessionStorage.setItem('logged', true)\r\n                    props.setLoginPop(true)\r\n                    sessionStorage.setItem('username', username)\r\n                    history.push('/')\r\n                    getUserInfo()\r\n                }\r\n                else {\r\n                    setLoginFail(true)\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className='container '>\r\n                <LoginFailed />\r\n                <div class=\"form-group mt-2\">\r\n                    <label for=\"exampleInputEmail1\">Username</label>\r\n                    <input type=\"email\" class=\"form-control\" onChange={e => getUsername(e.target.value)} />\r\n                </div>\r\n                <div class=\"form-group mt-2\">\r\n                    <label for=\"exampleInputPassword1\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" onChange={e => getPass1(e.target.value)} />\r\n                </div>\r\n                <button class=\"btn btn-primary mt-2\" onClick={handleSubmit} >Login</button>\r\n                <br />\r\n                <br />\r\n                <span className='text-muted m-auto' href=\"/register\">Dont have an account? <a href=\"/register\">Register</a></span>\r\n                <p className='text-muted mt-3 ' >You will be logged off automatically when the session is over</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Logout.jsx",[],"D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Cart.jsx",["74","75","76","77"],"import React, { useEffect, useState } from 'react';\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport NavBar from './NavBar.jsx'\r\n\r\nlet Cart = () => {\r\n\r\n    let [myItems, setMyItems] = useState([])\r\n    let history = useHistory()\r\n\r\n\r\n    let fetchData = () => {\r\n        fetch('http://127.0.0.1:8000/api/get-order-item/' + sessionStorage.getItem('id'), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                if (data) {\r\n                    setMyItems(data)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            fetchData()\r\n        }, []\r\n    )\r\n\r\n    let adjustQty = (id, change = 0) => {\r\n        let i = myItems.findIndex(e => e.id === id);\r\n        setMyItems(\r\n            prev => [\r\n                ...prev.slice(0, i),\r\n                { ...prev[i], quantity: prev[i].quantity + change },\r\n                ...prev.slice(i + 1),\r\n            ]\r\n        )\r\n    }\r\n\r\n    let adjustProceed = (e) => {\r\n        if (e.proceed === true) {\r\n            e.proceed = false\r\n        } else if (e.proceed === false) {\r\n            e.proceed = true\r\n        }\r\n    }\r\n\r\n    myItems.map(\r\n        (e) => {\r\n            if (e.quantity < 1) {\r\n                e.quantity = 1\r\n            }\r\n            return null\r\n        }\r\n    )\r\n\r\n\r\n    let handleChange = (item_id, quantity, proceed) => {\r\n        fetch('http://127.0.0.1:8000/api/update-order', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n            , body: JSON.stringify(\r\n                {\r\n                    item_id: item_id,\r\n                    quantity: quantity,\r\n                    user_id: sessionStorage.getItem('id'),\r\n                    proceed: proceed\r\n                }\r\n            )\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                console.log(data)\r\n            }\r\n        )\r\n    }\r\n\r\n    let deleteItem = (id) => {\r\n        fetch('http://127.0.0.1:8000/api/delete-order', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n            , body: JSON.stringify(\r\n                {\r\n                    id: id,\r\n                    user_id: sessionStorage.getItem('id')\r\n                }\r\n            )\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                console.log(data)\r\n                fetchData()\r\n            }\r\n        )\r\n    }\r\n\r\n    let CartItems = () => {\r\n        return myItems.map(\r\n            (value) => {\r\n                return (\r\n                    <div className='row  w-100 m-auto' >\r\n                        <div className=\"card-deck  w-100 container-fluid m-auto bg-light\">\r\n                            <div className=\"card shadow-lg p-1 mb-5 bg-white bg-light mt-4 mb-2 \" >\r\n                                <img src={value.item.image} className=\"card-img-top m-auto\" alt=\"...\" style={{ width: \"20rem\" }} />\r\n                                <div className=\"card-body border-top \">\r\n                                    <div className='d-flex justify-content-between' >\r\n                                        <h4>{value.item.title}</h4>\r\n                                        <div className='d-flex flex-row-reverse' >\r\n                                            <svg onClick={() => {\r\n                                                adjustQty(value.id, +1)\r\n                                            }} id='add' xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"23\" fill=\"currentColor\" class=\"bi bi-plus\" viewBox=\"0 0 16 16\" >\r\n                                                <path fill-rule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                                            </svg>\r\n                                            <input readOnly value={value.quantity} className='w-25  h-75 text-center' />\r\n                                            <svg onClick={() => {\r\n                                                adjustQty(value.id, -1)\r\n                                            }} xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"25\" fill=\"currentColor\" class=\"bi bi-dash\" viewBox=\"0 0 16 16\">\r\n                                                <path fill-rule=\"evenodd\" d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z\" />\r\n                                            </svg>\r\n                                            <svg className='mr-1' onClick={() => deleteItem(value.id)} xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"30\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                                <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                            </svg>\r\n                                        </div>\r\n                                    </div>\r\n                                    <h5>{value.item.price}</h5>\r\n                                    <div class=\"form-check d-flex  justify-content-between\">\r\n                                        <input onClick={() => adjustProceed(value)} type=\"checkbox\" class=\"form-check-input\" id=\"quantity\" defaultChecked={value.proceed} />\r\n                                        <label class=\"form-check-label\" for=\"exampleCheck1\">Proceed this item to checkout</label>\r\n                                        <button onClick={() => {\r\n                                            handleChange(value.item.id, value.quantity, value.proceed)\r\n                                        }\r\n                                        } class=\"btn btn-success \">Update</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                )\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <NavBar />\r\n            <hr />\r\n            <button onClick={\r\n                () => history.push('/checkout')\r\n            } type=\"button\" class=\" w-75 m-auto  btn btn-warning btn-lg btn-block\">Proceed to Checkout</button>\r\n            <CartItems />\r\n        </div >\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Cart;\r\n\r\n","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Checkout.jsx",["78","79","80"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NavBar from './NavBar.jsx'\r\n\r\nlet Checkout = () => {\r\n\r\n    let [totalPrice, setTotalPrice] = useState('')\r\n    let [myItems, setMyItems] = useState([])\r\n\r\n    let history = useHistory()\r\n\r\n    let fetchData = () => {\r\n        fetch('http://127.0.0.1:8000/api/get-checkout-order-item/' + sessionStorage.getItem('id'), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                if (data) {\r\n                    setMyItems(data)\r\n                }\r\n            })\r\n    }\r\n\r\n    let buyItems = () => {\r\n        fetch('http://127.0.0.1:8000/api/set-bought-item', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    user: sessionStorage.getItem('id'),\r\n                }\r\n            )\r\n        }\r\n        ).then(\r\n            (response) => {\r\n                fetchData()\r\n                fetchTotalPrice()\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => console.log(data)\r\n        )\r\n\r\n    }\r\n\r\n    let fetchTotalPrice = () => {\r\n        fetch('http://127.0.0.1:8000/api/get-total-value/' + sessionStorage.getItem('id'), {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                if (data) {\r\n                    setTotalPrice(data)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            fetchData()\r\n            fetchTotalPrice()\r\n        }, []\r\n    )\r\n\r\n    let Products = () => {\r\n        return (\r\n            <>\r\n                {\r\n                    myItems.map(\r\n                        (value) => {\r\n                            return (\r\n                                <li class=\"list-group-item d-flex justify-content-between lh-condensed\">\r\n                                    <div>\r\n                                        <h6 class=\"my-0\">{value.item.title}</h6>\r\n                                        <small class=\"text-muted\">Q : {value.quantity}</small>\r\n                                    </div>\r\n                                    <span class=\"text-muted\"> EACH : {value.item.price}</span>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <div class=\"row container m-auto\">\r\n                <div class=\"col-md-4 order-md-2 mb-4 mt-4\">\r\n                    <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\r\n                        <span class=\"text-muted\">Your cart</span>\r\n                        <span class=\"badge badge-secondary badge-pill\">{totalPrice.cart_length}</span>\r\n                    </h4>\r\n                    <ul class=\"list-group mb-3\">\r\n                        <Products />\r\n                        <li class=\"list-group-item d-flex justify-content-between\">\r\n                            <h5> Total : {'$ ' + totalPrice.total_price}</h5>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"col-md-8 order-md-1\">\r\n                    <h4 class=\"mb-3\">Billing address</h4>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 mb-3\">\r\n                            <label for=\"firstName\">First name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"firstName\" placeholder=\"\" required=\"\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                Valid first name is required.\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"col-md-6 mb-3\">\r\n                            <label for=\"lastName\">Last name</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"lastName\" placeholder=\"\" required=\"\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                Valid last name is required.\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"email\">Email</label>\r\n                        <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"you@example.com\" />\r\n                        <div class=\"invalid-feedback\">\r\n                            Please enter a valid email address for shipping updates.\r\n                            </div>\r\n                    </div>\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"address\">Address</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"address\" placeholder=\"1234 Main St\" required=\"\" />\r\n                        <div class=\"invalid-feedback\">\r\n                            Please enter your shipping address.\r\n                            </div>\r\n                    </div>\r\n\r\n                    <div class=\"mb-3\">\r\n                        <label for=\"address2\">Address 2 <span class=\"text-muted\">(Optional)</span></label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"address2\" placeholder=\"Apartment or suite\" />\r\n                    </div>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-5 mb-3\">\r\n                            <label for=\"country\">Country</label>\r\n                            <select class=\"custom-select d-block w-100\" id=\"country\" required=\"\">\r\n                                <option value=\"\">Choose...</option>\r\n                                <option>India</option>\r\n                                <option>United States</option>\r\n                            </select>\r\n                            <div class=\"invalid-feedback\">\r\n                                Please select a valid country.\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"col-md-4 mb-3\">\r\n                            <label for=\"state\">State</label>\r\n                            <select class=\"custom-select d-block w-100\" id=\"state\" required=\"\" >\r\n                                <option value=\"\">Choose...</option>\r\n                                <option>West Bengal</option>\r\n                                <option>California</option>\r\n                            </select>\r\n                            <div class=\"invalid-feedback\">\r\n                                Please provide a valid state.\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 mb-3\">\r\n                            <label for=\"zip\">Zip</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"zip\" placeholder=\"\" required=\"\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                Zip code required.\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"mb-4\" />\r\n\r\n                    <h4 class=\"mb-3\">Payment</h4>\r\n\r\n                    <div class=\"d-block my-3\">\r\n                        <div class=\"custom-control custom-radio\">\r\n                            <input id=\"credit\" name=\"paymentMethod\" type=\"radio\" class=\"custom-control-input\" checked=\"\" required=\"\" />\r\n                            <label class=\"custom-control-label\" for=\"credit\">Credit card</label>\r\n                        </div>\r\n                        <div class=\"custom-control custom-radio\">\r\n                            <input id=\"debit\" name=\"paymentMethod\" type=\"radio\" class=\"custom-control-input\" required=\"\" />\r\n                            <label class=\"custom-control-label\" for=\"debit\">Debit card</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6 mb-3\">\r\n                            <label for=\"cc-name\">Name on card</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"cc-name\" placeholder=\"\" required=\"\" />\r\n                            <small class=\"text-muted\">Full name as displayed on card</small>\r\n                            <div class=\"invalid-feedback\">\r\n                                Name on card is required\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"col-md-6 mb-3\">\r\n                            <label for=\"cc-number\">Card number</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"cc-number\" placeholder=\"\" required=\"\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                Card number is required\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-3 mb-3\">\r\n                            <label for=\"cc-expiration\">Expiration</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"cc-expiration\" placeholder=\"\" required=\"\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                Expiration date required\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"col-md-3 mb-3\">\r\n                            <label for=\"cc-expiration\">CVV</label>\r\n                            <input type=\"text\" class=\"form-control\" id=\"cc-cvv\" placeholder=\"\" required=\"\" />\r\n                            <div class=\"invalid-feedback\">\r\n                                Security code required\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr class=\"mb-4\" />\r\n                    <button class=\"btn btn-primary btn-lg btn-block mb-4\" onClick={\r\n                        () => {\r\n                            buyItems()\r\n                            history.push('/profile')\r\n                        }\r\n                    } >Confirm Order</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;\r\n","D:\\Web_dev\\e-commerce\\frontend\\src\\components\\Profile.jsx",["81"],"import React, { useEffect, useState } from 'react';\r\nimport NavBar from './NavBar.jsx'\r\n\r\nlet Profile = () => {\r\n\r\n    let [orderedItems, setOrderedItems] = useState([])\r\n\r\n    let fetchData = () => {\r\n        fetch('http://127.0.0.1:8000/api/get-bought-item', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer' + ' ' + sessionStorage.getItem('token')\r\n            }\r\n            , body: JSON.stringify(\r\n                {\r\n                    user: sessionStorage.getItem('id'),\r\n                }\r\n            )\r\n        }).then(\r\n            (response) => {\r\n                return response.json()\r\n            }\r\n        ).then(\r\n            (data) => {\r\n                setOrderedItems(data)\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(\r\n        () => fetchData()\r\n        , []\r\n    )\r\n\r\n    return (\r\n        <>\r\n        <NavBar />\r\n        <div className ='container' >\r\n            <h2 className = 'text-left mt-3' >My Orders</h2>\r\n            <hr/>\r\n            {\r\n                orderedItems.map(\r\n                    (value) => {\r\n                        return (\r\n                            <div className='row  w-100 m-auto' >\r\n                                <div className=\"card-deck  w-100 container-fluid m-auto bg-light\">\r\n                                    <div className=\"card shadow-lg p-1 mb-5 bg-white bg-light mt-4 mb-2 \" >\r\n                                        <img src={value.item.image} className=\"card-img-top m-auto\" alt=\"...\" style={{ width: \"20rem\" }} />\r\n                                        <div className=\"card-body border-top \">\r\n                                            <div className='d-flex justify-content-between' >\r\n                                                <h4>{value.item.title}</h4>\r\n                                                <h4><span className='text-muted' >Q :</span> {value.quantity}</h4>\r\n                                            </div>\r\n                                            <h5>{value.item.price}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div >\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"91","line":14,"column":47,"nodeType":"92","messageId":"93","endLine":14,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":47,"column":21,"nodeType":"96","endLine":47,"endColumn":73},{"ruleId":"94","severity":1,"message":"95","line":12,"column":34,"nodeType":"96","endLine":12,"endColumn":98},{"ruleId":"90","severity":1,"message":"91","line":17,"column":43,"nodeType":"92","messageId":"93","endLine":17,"endColumn":44},{"ruleId":"90","severity":1,"message":"91","line":17,"column":43,"nodeType":"92","messageId":"93","endLine":17,"endColumn":44},{"ruleId":"86","severity":1,"message":"97","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":16,"column":43,"nodeType":"92","messageId":"93","endLine":16,"endColumn":44},{"ruleId":"90","severity":1,"message":"91","line":72,"column":43,"nodeType":"92","messageId":"93","endLine":72,"endColumn":44},{"ruleId":"90","severity":1,"message":"91","line":98,"column":43,"nodeType":"92","messageId":"93","endLine":98,"endColumn":44},{"ruleId":"90","severity":1,"message":"91","line":17,"column":43,"nodeType":"92","messageId":"93","endLine":17,"endColumn":44},{"ruleId":"90","severity":1,"message":"91","line":36,"column":43,"nodeType":"92","messageId":"93","endLine":36,"endColumn":44},{"ruleId":"90","severity":1,"message":"91","line":61,"column":43,"nodeType":"92","messageId":"93","endLine":61,"endColumn":44},{"ruleId":"90","severity":1,"message":"91","line":13,"column":43,"nodeType":"92","messageId":"93","endLine":13,"endColumn":44},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]